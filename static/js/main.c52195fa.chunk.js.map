{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["Option","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setOption","option","query","setQuery","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","loading","setLoading","useEffect","userId","finally","href","App","setTodos","visibleTodos","filteredByOption","filter","toLowerCase","includes","trim","filteredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c52195fa.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  option: string\n  query: string\n  setOption: (val: any) => void\n  setQuery: (val: any) => void\n};\n\nconst enum Option {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setOption,\n  option,\n  query,\n  setQuery,\n}) => {\n  const handleChooseOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOption(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleChooseOption}\n            value={option}\n          >\n            <option\n              value={Option.ALL}\n            >\n              All\n            </option>\n            <option\n              value={Option.ACTIVE}\n            >\n              Active\n            </option>\n\n            <option\n              value={Option.COMPLETED}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  setSelectedTodo: (val: Todo) => void\n  selectedTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={cn(\n              { 'has-background-info-light': selectedTodo?.id === todo.id },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {!todo.completed\n              ? <td className=\"is-vcentered\" />\n              : (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  {selectedTodo?.id === todo.id\n                    ? (<i className=\"far fa-eye-slash\" />)\n                    : (<i className=\"far fa-eye\" />)}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n\n// export const getUser = (userId: number) => {\n//   return get<User>(`/users/${userId}`)\n//     .then(users => users.filter((user: User) => user.id === userId));\n// };\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport enum Option {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nconst filteredTodos = (todos: Todo[], query: string, option: string) => {\n  let filteredByOption: Todo[] = [];\n\n  if (option) {\n    filteredByOption = todos.filter((todo) => {\n      switch (option) {\n        case Option.ACTIVE:\n          return !todo.completed;\n\n        case Option.COMPLETED:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  }\n\n  if (query) {\n    filteredByOption = filteredByOption.filter(todo => (\n      todo.title.toLowerCase().includes(query.trim().toLowerCase())\n    ));\n  }\n\n  return filteredByOption;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [option, setOption] = useState(Option.ALL);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const visibleTodos = filteredTodos(todos, query, option);\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      getTodos()\n        .then(todo => setTodos(todo))\n        .finally(() => setLoading(false));\n    }, 300);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setOption={setOption}\n                option={option}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal selectedTodo={selectedTodo} setSelectedTodo={setSelectedTodo} />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo\n  setSelectedTodo: (val: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, setSelectedTodo }) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      getUser(selectedTodo.userId)\n        .finally(() => setLoading(false));\n    }, 300);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setSelectedTodo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {selectedTodo.completed\n                    ? ('Ervin Howell')\n                    : ('Leanne Graham')}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}